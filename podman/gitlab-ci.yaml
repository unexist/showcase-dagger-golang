stages:
  - build

# Build and push the Docker image to the GitLab image registry
# using Docker-in-Docker.
dind-build:
  stage: build

  image:
    # An alpine-based image with the `docker` CLI installed.
    name: docker:stable

  # This will run a Docker daemon in a container
  # (Docker-In-Docker), which will be available at
  # thedockerhost:2375. If you make e.g. port 5000 public in
  # Docker (`docker run -p 5000:5000 yourimage`) it will be
  # exposed at thedockerhost:5000.
  services:
   - name: docker:dind
     alias: dockerdaemon

  variables:
    # Tell docker CLI how to talk to Docker daemon.
    DOCKER_HOST: tcp://dockerdaemon:2375/
    # Use the overlayfs driver for improved performance.
    DOCKER_DRIVER: overlay2
    # Disable TLS since we're running inside local network.
    DOCKER_TLS_CERTDIR: ""

  script:
    # GitLab has a built-in Docker image registry, whose
    # parameters are set automatically. You can use some
    # other Docker registry though by changing the login and
    # image name.
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - docker build -t "$CI_REGISTRY_IMAGE:dind" .
    - docker push "$CI_REGISTRY_IMAGE:dind"

# Build and push the Docker image to the GitLab image registry
# using Podman.
podman-build:
  stage: build

  image:
    name: quay.io/podman/stable

  script:
    # GitLab has a built-in Docker image registry, whose
    # parameters are set automatically. You can use some
    # other Docker registry though by changing the login and
    # image name.
    - podman login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - podman build -t "$CI_REGISTRY_IMAGE:podman" .
    - podman push "$CI_REGISTRY_IMAGE:podman"
